{"searchDocs":[{"title":"MultiTowerServer","type":0,"sectionRef":"#","url":"/MTK-Dev/api/MultiTowerServer","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"MultiTowerServer","url":"/MTK-Dev/api/MultiTowerServer#functions","content":" ","version":null,"tagName":"h2"},{"title":"PlayerLoadTower​","type":1,"pageTitle":"MultiTowerServer","url":"/MTK-Dev/api/MultiTowerServer#PlayerLoadTower","content":"&lt;/&gt; MultiTowerServer.PlayerLoadTower( playerName: string, towerName: string, resetTimer: boolean ) → () Loads a tower by loading the COs, teleporting the player to the tower, and resetting their timer if needed ","version":null,"tagName":"h3"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/MTK-Dev/docs/intro","content":"","keywords":"","version":"Next"},{"title":"Using the kit​","type":1,"pageTitle":"Introduction","url":"/MTK-Dev/docs/intro#using-the-kit","content":" ","version":"Next","tagName":"h2"},{"title":"Adding a tower​","type":1,"pageTitle":"Introduction","url":"/MTK-Dev/docs/intro#adding-a-tower","content":" Adding a tower is at the core of this kit, It's pretty much the whole reason one would use this kit. To add a tower, start by inserting a tower, or even a blank kit, into the workspace. After it is inserted, move it into the Towers folder.    Rename the tower to the acronym of the tower; Be reasonable, as it's acronym will be used as the tower's internal identifier, and will be shown next to the timer on the client's GUI.  The tower should be organized the same way any tower is normally organized. The kit folder should contain:  The Obby folder which contains all of the normal, static parts. Most of which make up the gameplay of the tower.The Frame folder/model, which contains the parts that make up the frame of the tower. This functionally is exactly the same as the obby folder, but a distinction will be important in the future, as I plan on adding a low-detail mode to the kit in the future.The ClientSidedObjects folder contains all of the client objects for the tower. When the game loads, every tower’s ClientSidedObjects folder is moved into storage (game.ServerStorage.TowerClientObjects), and is served to a client whenever they load a tower. Optionally, you may move this folder to the TowerClientObjects folder yourself in studio, just as long as the folder is renamed to be the same as the tower’s acronym.The folder itself is optional too, the kit will function if this folder is removed completely, making it a true “purist” tower. ","version":"Next","tagName":"h3"}],"options":{"id":"default"}}